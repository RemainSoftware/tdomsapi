{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "OMS - Database REST API",
    "description" : "This is the TD/OMS Database REST API.",
    "contact" : {
      "name" : "Remain software",
      "url" : "https://remainsoftware.com",
      "email" : "info@remaibsoftware.com"
    },
    "license" : {
      "name" : "Remain Software License",
      "url" : "https://remainsoftware.com/remain-api-studio-terms-and-conditions"
    },
    "version" : "0.0.1",
    "x-restgeninfo" : {
      "server" : "https://plato.remainsoftware.com:45111/generator",
      "library" : "IRESTLIB",
      "file" : "OMEROV1.json",
      "srclibrary" : "IRESTLIB",
      "object" : "OMRDBA"
    }
  },
  "servers" : [ {
    "url" : "{protocol}://{server}:{port}/{library}/OMRDBA",
    "description" : "The server",
    "variables" : {
      "server" : {
        "default" : "plato.remainsoftware.com"
      },
      "protocol" : {
        "enum" : [ "https", "http" ],
        "default" : "https"
      },
      "library" : {
        "description" : "",
        "default" : "OMS"
      },
      "port" : {
        "description" : "",
        "default" : "45011"
      }
    }
  } ],
  "security" : [ {
    "JWT" : [ ]
  } ],
  "paths" : {
    "/get" : {
      "summary" : "Get the database records",
      "description" : "Get the database records.",
      "post" : {
        "summary" : "Get the database records",
        "description" : "Get the database records",
        "operationId" : "getRecords",
        "requestBody" : {
          "description" : "Post Method",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/request"
              },
              "examples" : {
                "Example of get " : {
                  "summary" : "How to specify the get input parameters value.",
                  "value" : {
                    "listInput" : {
                      "pageNumber" : 1,
                      "returnTotalRecords" : false,
                      "recordsPerPage" : 50,
                      "returnFields" : [ "applicationCode", "objectCode", "objectType", "objectLibrary", "objectDescription" ],
                      "schemaOverride" : "",
                      "whereClause" : "",
                      "table" : "OMXObjectExtended",
                      "fieldSelections" : [ {
                        "field" : "applicationCode",
                        "value" : "XMP",
                        "operator" : "IN"
                      }, {
                        "field" : "objectCode",
                        "value" : "OCTOCL1,OCTOCL2",
                        "operator" : "BETWEEN"
                      } ],
                      "skipChecks" : true,
                      "distinct" : true
                    },
                    "sortFields" : [ {
                      "fieldName" : "applicationCode",
                      "sortBy" : "desc"
                    }, {
                      "fieldName" : "objectCode",
                      "sortBy" : "asc"
                    } ],
                    "returnExtendedMessageText" : true
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "return code 200 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/result"
                },
                "examples" : {
                  "response200" : {
                    "summary" : "Response to a successful API call.",
                    "value" : {
                      "returnStatus" : {
                        "status" : "*NORM",
                        "messages" : [ ],
                        "fieldMessages" : [ ]
                      },
                      "listStatus" : {
                        "totalRecords" : 0,
                        "recordsReturned" : 4,
                        "pageNumber" : 1
                      },
                      "records" : [ {
                        "applicationCode" : "XMP",
                        "objectCode" : "OCTOCL1",
                        "objectType" : "*PGM",
                        "objectLibrary" : "OMHD_TST",
                        "objectDescription" : "CLLE Test Object"
                      }, {
                        "applicationCode" : "XMP",
                        "objectCode" : "OCTOCL1",
                        "objectType" : "*PGM",
                        "objectLibrary" : "OMHD_DEV",
                        "objectDescription" : "CLLE Test Object"
                      }, {
                        "applicationCode" : "XMP",
                        "objectCode" : "OCTOCL1",
                        "objectType" : "*PGM",
                        "objectLibrary" : "O_XT0453T",
                        "objectDescription" : "CLLE Test Object"
                      }, {
                        "applicationCode" : "XMP",
                        "objectCode" : "OCTOCL2",
                        "objectType" : "*PGM",
                        "objectLibrary" : "OMHD_DEV",
                        "objectDescription" : "CL Testing object"
                      } ],
                      "fileName" : "ObjectExtended"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/401"
          },
          "422" : {
            "$ref" : "#/components/responses/422"
          }
        },
        "callbacks" : { },
        "x-generate" : {
          "session" : false,
          "jwtlogin" : false,
          "suffix" : "SO",
          "generate" : false
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "listInput" : {
        "required" : [ "table" ],
        "type" : "object",
        "properties" : {
          "pageNumber" : {
            "type" : "integer",
            "description" : "The page number to view.\r\nIf the file contains 100 records and you want 10 records back then you can specify the page number e.g. 1 to get records 1 to 10.",
            "default" : 1
          },
          "returnTotalRecords" : {
            "type" : "boolean",
            "description" : "Return total number of records.",
            "default" : false
          },
          "recordsPerPage" : {
            "maximum" : 50,
            "type" : "integer",
            "description" : "The number of records to be returned per request.",
            "nullable" : true,
            "default" : 50
          },
          "returnFields" : {
            "maxItems" : 100,
            "type" : "array",
            "description" : "Fields to be returned, default is to return all fields.",
            "items" : {
              "type" : "string"
            }
          },
          "schemaOverride" : {
            "maxLength" : 128,
            "type" : "string",
            "description" : "Instead of fetching from the database library, fetch it from this library."
          },
          "whereClause" : {
            "maxLength" : 2048,
            "type" : "string",
            "description" : "An additional where clause to manipulate the list even further."
          },
          "table" : {
            "maxLength" : 128,
            "type" : "string",
            "description" : "The table to read."
          },
          "fieldSelections" : {
            "maxItems" : 250,
            "type" : "array",
            "description" : "The field selections for this query (max 250)",
            "items" : {
              "$ref" : "#/components/schemas/fieldSelection"
            }
          },
          "skipChecks" : {
            "type" : "boolean",
            "description" : "Set to true to skip the input validation. Skipping the input validation will save time but will return less usable feedback information in case of mistakes.",
            "default" : false
          },
          "distinct" : {
            "type" : "boolean",
            "description" : "Use distinct records in the output by removing duplicates in the output. The return fields must be specified for this to work.",
            "default" : false
          }
        },
        "description" : "Common input items across all APIs"
      },
      "message" : {
        "type" : "object",
        "properties" : {
          "messageText" : {
            "maxLength" : 256,
            "type" : "string",
            "description" : "It contains the first level message text."
          },
          "messageID" : {
            "maxLength" : 50,
            "type" : "string",
            "description" : "It contains the message id of the message : Example - CPF0000"
          },
          "messageTextExtended" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "It contains the additional message information based on the value of the request."
          }
        },
        "description" : "message object"
      },
      "fieldMessage" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "$ref" : "#/components/schemas/message"
          },
          "fieldName" : {
            "type" : "string",
            "description" : "It contains the name of the field that is in error."
          }
        },
        "description" : "This schema contains information about a field in error."
      },
      "listStatus" : {
        "type" : "object",
        "properties" : {
          "totalRecords" : {
            "type" : "integer",
            "description" : "Total available records. \r\nThis will be returned only if requested in the request."
          },
          "recordsReturned" : {
            "type" : "integer",
            "description" : "Total number of records returned."
          },
          "pageNumber" : {
            "type" : "integer",
            "description" : "page number returned."
          }
        },
        "description" : "Common response to all list Apis"
      },
      "returnStatus" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Return status. See the description of the operation to see what values can be returned."
          },
          "messages" : {
            "maxItems" : 50,
            "type" : "array",
            "description" : "General error messages",
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "fieldMessages" : {
            "maxItems" : 50,
            "type" : "array",
            "description" : "fields in error along with error message",
            "items" : {
              "$ref" : "#/components/schemas/fieldMessage"
            }
          }
        },
        "description" : "The return status object"
      },
      "sortField" : {
        "required" : [ "fieldName", "sortBy" ],
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "description" : "Enter field name on which you want to do the sorting."
          },
          "sortBy" : {
            "type" : "string",
            "description" : "Enter sorting order of the field. The possible values are : \r\n\r\nDESC - Descending order \r\n\r\nASC - Ascending order",
            "default" : "ASC"
          }
        },
        "description" : "Enter Fields to be sorted"
      },
      "request" : {
        "type" : "object",
        "properties" : {
          "listInput" : {
            "$ref" : "#/components/schemas/listInput"
          },
          "sortFields" : {
            "maxItems" : 50,
            "type" : "array",
            "description" : "Sorting order of the fields",
            "items" : {
              "$ref" : "#/components/schemas/sortField"
            }
          },
          "returnExtendedMessageText" : {
            "type" : "boolean",
            "description" : "Return extended message text. true or false.",
            "default" : false
          }
        },
        "description" : "list input for task list API"
      },
      "fieldSelection" : {
        "required" : [ "operator" ],
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string",
            "description" : "The field to select from."
          },
          "value" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "The value"
          },
          "operator" : {
            "maxLength" : 20,
            "type" : "string",
            "description" : "Specify the operator. ",
            "example" : "{\"field\": \"applicationCode\",\"value\": \"XMP\",\"operator\": \"IN\"},{\"field\": \"applicationCode\",\"value\": \"XMP\",\"operator\": \"BETWEEN\"},{\"field\": \"applicationCode\",\"value\": \"M[ABC].*\",\"operator\": \"REGEX\"}",
            "default" : "IN",
            "enum" : [ "IN", "NOTIN", "BETWEEN", "NOTBETWEEN", "REGEX", "EQ", "LT", "GT", "LE", "GE", "NE", "STARTSWITH", "ENDSWITH", "CONTAINS", "NOTSTARTSWITH", "NOTENDSWITH", "NOTCONTAINS", "AND", "OR" ]
          },
          "group" : {
            "type" : "number",
            "description" : "This is the select group that this field selection belongs to, or it is a group definition in case the field is blanks. In the latter case also specify the parent group."
          },
          "parentGroup" : {
            "type" : "number",
            "description" : "In case of a group definition, specify the parent group."
          },
          "ignoreCase" : {
            "type" : "boolean",
            "description" : "If value is true then the case of the string should be ignored. The default value is false.",
            "default" : false
          }
        }
      },
      "result" : {
        "type" : "object",
        "properties" : {
          "returnStatus" : {
            "$ref" : "#/components/schemas/returnStatus"
          },
          "listStatus" : {
            "$ref" : "#/components/schemas/listStatus"
          },
          "records" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/record"
            }
          },
          "fileName" : {
            "type" : "string",
            "description" : "Name of database file."
          }
        },
        "description" : "The response with the data."
      },
      "record" : {
        "maxLength" : 65535,
        "type" : "string",
        "description" : "Placeholder objects which is a pointer (65535)"
      }
    },
    "responses" : {
      "401" : {
        "description" : "Unauthorized",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/message"
            },
            "examples" : {
              "response401" : {
                "summary" : "Not authorized.",
                "value" : {
                  "messageText" : "Unauthorized or expired token. Please login again.",
                  "messageID" : "OMQF201",
                  "messageTextExtended" : ""
                }
              }
            }
          }
        }
      },
      "422" : {
        "description" : "Unprocessable Entity",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/message"
            },
            "examples" : {
              "response422" : {
                "summary" : "Unprocessable Entity",
                "value" : {
                  "messageText" : "Unprocessable Entity.",
                  "messageID" : "OMQF201",
                  "messageTextExtended" : ""
                }
              }
            }
          }
        }
      }
    },
    "examples" : {
      "IN" : {
        "summary" : "How to specify the IN operator selection",
        "value" : "  {\r\n        \"field\": \"applicationCode\",\r\n        \"value\": \"XMP\",\r\n        \"operator\": \"IN\"\r\n  }"
      }
    },
    "securitySchemes" : {
      "JWT" : {
        "type" : "http",
        "description" : "JWT validation",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "callbacks" : { }
  }
}
